worker_processes 1;
daemon off;

error_log stderr;
events { worker_connections 1024; }

http {
    charset utf-8;
    log_format combined_cloudflare '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '$http_cf_ray';
    access_log /dev/stdout combined_cloudflare;
    default_type application/octet-stream;
    include mime.types;
    sendfile on;

    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gunzip on;
    gzip_static always;
    gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;
    gzip_vary on;

    tcp_nopush on;
    keepalive_timeout 30;
    port_in_redirect off; # Ensure that redirects don't include the internal container PORT - 8080
    absolute_redirect off; # Keep redirects relative, which also avoids redirecting slashless directory requests via plaintext HTTP
    server_tokens off;

    server {
        listen 8080;
        server_name localhost;
        root public;
        error_page 404 /404.html;
        
        
        # set $updated_host $host;
        # if ($http_x_forwarded_host != "") {
        #     set $updated_host $http_x_forwarded_host;
        # } 

        # if ($http_x_forwarded_proto != "https") {
        #     return 301 https://$updated_host$request_uri;
        # }

        location / {

            # Anything in /static can be cached forever
            location ~* ^/static/ {
                add_header X-Static-Folder true always;
                add_header Cache-Control "public, max-age=31536000, immutable";
            }
            
            # Webpack-generated CSS and JS (apart from /sw.js) can be cached forever
            location ~* (?<!^/sw)\.(?:css|js)$ {
                add_header X-Webpack-CSS-or-JS true always;
                add_header Cache-Control "public, max-age=31536000, immutable";
            }

            # HTML should be revalidated every time
            location ~* \.html$ {
                # add_header Content-Security-Policy "default-src 'self';";
                add_header X-HTML true always;
                add_header Cache-Control "public, no-cache";
            }

            # JSON files in /page-data should be revalidated every time
            location ~* ^/page-data/.+\.json$ {
                add_header X-Page-Data true always;
                add_header Cache-Control "public, no-cache";
            }
        }

        # Deny access to dot-files
        location ~ /\. {
            deny all;
            return 404;
        }
        
    }
}